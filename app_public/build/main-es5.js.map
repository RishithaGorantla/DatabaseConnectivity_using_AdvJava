{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/create/create.component.ts","webpack:///src/app/create/create.component.html","webpack:///src/app/details-page/details-page.component.ts","webpack:///src/app/details-page/details-page.component.html","webpack:///src/app/framework/framework.component.ts","webpack:///src/app/framework/framework.component.html","webpack:///src/app/game-list/game-list.component.ts","webpack:///src/app/game-list/game-list.component.html","webpack:///src/app/game-service.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/app/indoor/indoor.component.ts","webpack:///src/app/indoor/indoor.component.html","webpack:///src/app/outdoor/outdoor.component.ts","webpack:///src/app/outdoor/outdoor.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","AppModule","provide","useValue","forRoot","path","component","declarations","imports","providers","bootstrap","Game","CreateComponent","gameDataService","newGame","_id","name","type","players","origin","stared","createGame","window","location","href","createNewGame","DetailsPageComponent","route","pageContent","header","title","body","params","pipe","getSingleGame","subscribe","deleteGame","updateGame","FrameworkComponent","GameListComponent","gameService","getGames","games","map","game","GameDataService","http","gamesUrl","get","toPromise","response","json","handleError","gameId","post","selectedGame","put","error","console","log","HeaderComponent","template","HomepageComponent","IndoorComponent","fontcolor","toUpperCase","OutdoorComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Games</h1>\n<div>\n  <p>\n    Research has shown that games are essential for healthy development in early childhood and beyond. Play lets children practise what they know, and also what they don't. It allows them to experiment through trial and error, find solutions to problems, work out the best strategies, and build new confidence and skills.\n  </p>\n  <p>\n    Games always enhance the abilities and skills of children and develop their challenging spirits. It helps us in the development of a healthy mind and fit body. It is truly observed that a healthy mind resides in a healthy body, so games should be practised on a regular basis among all the students.\n  </p>\n  <img src=\"../assets/golf.jpg\" alt=\"football\" height=\"200\" style=\"float:right\">\n  <p style=\"width:50%;\">Games are a structured form of play. These can include goals, rules, art, environments, stories, challenges, characters, items, powers, rewards, exploration and interaction between players</p>\n  \n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\n\nimport { Component, OnInit } from '@angular/core';\n\nimport { APP_BASE_HREF } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { FormsModule } from '@angular/forms';\nimport { GameListComponent } from './game-list/game-list.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FrameworkComponent } from './framework/framework.component';\nimport { CreateComponent } from './create/create.component';\nimport { DetailsPageComponent } from './details-page/details-page.component';\nimport { IndoorComponent } from './indoor/indoor.component';\nimport { OutdoorComponent } from './outdoor/outdoor.component';\n\n\n//export class TimeAgoExtendsPipe extends TimeAgoPipe { }\n@NgModule({\n    declarations: [\n    \n        GameListComponent,\n    \n        AboutComponent,\n    \n        HomepageComponent,\n    \n        HeaderComponent,\n    \n        FrameworkComponent,\n    \n        CreateComponent,\n    \n        DetailsPageComponent,\n    \n        IndoorComponent,\n    \n        OutdoorComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpModule,\n        FormsModule,\n        RouterModule.forRoot([\n            {\n                path: '',\n                component: HomepageComponent\n            },\n            {\n                path: 'about',\n                component: AboutComponent\n            },\n            {\n                path: 'create',\n                component: CreateComponent\n            },\n            {\n                path: 'game/:gameid',\n                component: DetailsPageComponent\n            },\n            {\n                path: 'indoor',\n                component: IndoorComponent\n            },\n            {\n                path: 'outdoor',\n                component: OutdoorComponent\n            }\n        ])\n    ],\n    providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\n    bootstrap: [FrameworkComponent]\n\n})\nexport class AppModule { }\n\nexport class Game {\n    _id: String;\n    name: String;\n    type: String;\n    players: Number;\n    origin: String;\n    stared: Boolean;\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Game } from '../game';\nimport { GameDataService } from '../game-service.service';\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css'],\n    providers: [GameDataService]\n})\nexport class CreateComponent implements OnInit {\n    public newGame: Game = {\n        _id: '',\n        name: '',\n        type: '',\n        players: 0,\n        origin: '',\n        stared: false\n    };\n\n\n    constructor(private gameDataService: GameDataService) { }\n\n    ngOnInit(): void {\n    }\n    public createNewGame(newGame: Game): void {\n        this.gameDataService.createGame(newGame);\n        window.location.href = '';\n    }\n}\n\n","\n<h1>Add a game you like!</h1>\n\n<div>\n  <form (ngSubmit)=\"createNewGame(newGame)\">\n    <label for=\"name\">Name</label>\n    <input type=\"text\" [(ngModel)]=\"newGame.name\" id=\"name\" name=\"name\" required=\"required\" />\n    <label for=\"type\">Type</label>\n    <input type=\"text\" [(ngModel)]=\"newGame.type\" id=\"type\" name=\"type\" required=\"required\" />\n    <label for=\"players\">Players</label>\n    <input type=\"number\" [(ngModel)]=\"newGame.players\" id=\"players\" name=\"players\" required=\"required\" />\n    <label for=\"origin\">Country</label>\n    <input type=\"text\" [(ngModel)]=\"newGame.origin\" id=\"origin\" name=\"origin\" required=\"required\" />\n    <label for=\"stared\">Is it your favourite game</label><br />\n    <input type=\"radio\" [(ngModel)]=\"newGame.stared\" id=\"true\" name=\"true\" value=\"true\" /> <label class=\"customLabel\" for=\"true\">Yes</label>\n    <input type=\"radio\" [(ngModel)]=\"newGame.stared\" id=\"false\" name=\"false\" value=\"false\"/> <label class=\"customLabel\"  for=\"false\">No</label><br>\n    <button type=\"submit\">Submit</button>\n  </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { GameDataService } from '../game-service.service';\nimport { Game } from '../game';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'app-details-page',\n    templateUrl: './details-page.component.html',\n    styleUrls: ['./details-page.component.css'],\n    providers: [GameDataService]\n})\nexport class DetailsPageComponent implements OnInit {\n\n    constructor(\n        private gameDataService: GameDataService,\n        private route: ActivatedRoute) {\n    }\n    newGame: Game;\n    ngOnInit(): void {\n        this.route.params.pipe(switchMap((params: Params) => {\n                return this.gameDataService.getSingleGame(params['gameid'])\n            }))\n            .subscribe((newGame: Game) => {\n                this.newGame = newGame;\n                this.pageContent.header.title = newGame.name;\n                this.pageContent.header.body = \"Details for selected game\";\n            });\n    }\n    pageContent = {\n        header: {\n            title: '',\n            body: ''\n        }\n    };\n\n    public deleteGame(newGame: Game): void {\n        this.gameDataService.deleteGame(newGame._id);\n        window.location.href = '';\n    }\n\n    public updateGame(newGame: Game): void {\n        this.gameDataService.updateGame(newGame);\n        window.location.href = '';\n    }\n}\n","<div class=\"mt-30\">\n  <app-header [content]=\"pageContent.header\"></app-header>\n  <h1>Details of {{newGame.name}}</h1>\n  <p><strong>Name:</strong> <span> {{newGame.name}}</span></p>\n  <p><strong>Type:</strong><span> {{newGame.type}}</span></p>\n  <p><strong>Players:</strong><span> {{newGame.players}}</span></p>\n  <p><strong>Country:</strong> <span> {{newGame.origin}}</span></p>\n  <p><strong>Is it your favourite game:</strong> <span> {{newGame.stared}}</span></p>\n\n  <form (ngSubmit)=\"deleteGame(newGame)\">\n    <button type=\"submit\" style=\"background-color:#f12b41f7\">Delete</button>\n  </form>\n</div>\n\n<div class=\"mt-30\">\n  <h1>Update</h1>\n  <form (ngSubmit)=\"updateGame(newGame)\">\n    <label for=\"name\">Name</label>\n    <input type=\"text\" [(ngModel)]=\"newGame.name\" id=\"name\" name=\"name\" required=\"required\" />\n    <label for=\"type\">Type</label>\n    <input type=\"text\" [(ngModel)]=\"newGame.type\" id=\"type\" name=\"type\" required=\"required\" />\n    <label for=\"players\">Players</label>\n    <input type=\"number\" [(ngModel)]=\"newGame.players\" id=\"players\" name=\"players\" required=\"required\" />\n    <label for=\"origin\">Country</label>\n    <input type=\"text\" [(ngModel)]=\"newGame.origin\" id=\"origin\" name=\"origin\" required=\"required\" />\n    <label for=\"stared\">Is it your favourite game</label><br />\n    <input type=\"radio\" [(ngModel)]=\"newGame.stared\" id=\"true\" name=\"true\" value=\"true\" /> <label class=\"customLabel\" for=\"true\">True</label>\n    <input type=\"radio\" [(ngModel)]=\"newGame.stared\" id=\"false\" name=\"false\" value=\"false\" /> <label class=\"customLabel\" for=\"false\">False</label><br>\n    <button type=\"submit\" style=\"background-color:#49924a\">Update</button>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.css']\n})\nexport class FrameworkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1></h1>\n<ul>\n  <li><a routerLink=\"\">Home</a></li>\n  <li><a routerLink=\"about\">About Games</a></li>\n  <li><a routerLink=\"create\">Create</a></li>\n  <li><a routerLink=\"indoor\">IndoorGames</a></li>\n  <li><a routerLink=\"outdoor\">OutdoorGames</a></li>\n</ul>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { Game } from '../game';\nimport { GameDataService } from '../game-service.service';\n\n\n@Component({\n    selector: 'app-game-list',\n    templateUrl: './game-list.component.html',\n    styleUrls: ['./game-list.component.css'],\n    providers: [GameDataService]\n})\nexport class GameListComponent implements OnInit {\n\n    games: Game[]\n    constructor(private gameService: GameDataService) { }\n    ngOnInit(): void {\n        this.gameService\n            .getGames()\n            .then((games: Game[]) => {\n                this.games = games.map(game => {\n                    return game;\n                });\n            });\n    }\n}\n\n","<div class=\"customImage\">\n  <img src=\"../assets/badminton.jpg\" alt=\"pawns\" height=\"300\">\n</div>\n<h1>Games added to the database!</h1>\n<table>\n  <tr>\n    <th>Game</th>    \n    <th>Modify</th>\n  </tr>\n  <tr *ngFor=\"let arr of games\">\n    <td><a routerLink=\"/game/{{arr._id}}\">{{arr.name}}</a></td>    \n    <td><a routerLink=\"/game/{{arr._id}}\"><img src=\"../assets/trash.png\" alt=\"Delete\" height=\"30\" width=\"30\"><img src=\"../assets/pencil.png\" alt=\"Update\" height=\"30\" width=\"30\"></a></td>\n  </tr>\n</table>\n\n","import { Injectable } from '@angular/core';\nimport { Game } from './game';\nimport { Http, Response } from '@angular/http';\n\n@Injectable()\nexport class GameDataService {\n\n    private gamesUrl = 'http://localhost:3000/api/games';\n\n    constructor(private http: Http) { }\n\n    getGames(): Promise<void | Game[]> {\n        return this.http.get(this.gamesUrl)\n            .toPromise()\n            .then(response => response.json() as Game[])\n            .catch(this.handleError);\n    }\n    getSingleGame(gameId: String): Promise<void | Game> {\n        return this.http.get(this.gamesUrl + '/' + gameId)\n            .toPromise()\n            .then(response => response.json() as Game)\n            .catch(this.handleError);\n    }\n    createGame(newGame: Game): Promise<void | Game> {\n        return this.http.post(this.gamesUrl, newGame).toPromise().then(response => response.json() as Game).catch(this.handleError);\n    }\n\n    deleteGame(selectedGame: String): Promise<void | Game> {\n        return this.http.delete(this.gamesUrl + '/' + selectedGame)\n            .toPromise().then(response => response.json() as Game).\n            catch(this.handleError);\n    }\n\n    updateGame(newGame: Game): Promise<void | Game> {\n        return this.http.put(this.gamesUrl + '/' + newGame._id, newGame).toPromise().then(response => response.json() as Game).catch(this.handleError);\n    }\n    private handleError(error: any) {\n        console.log(\"error\");\n    }\n}\n\n\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n    selector: 'app-header',\n    template: `\n    <p>\n      \n    </p>\n  `,\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n    @Input() content: any;\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-homepage',\n    templateUrl: './homepage.component.html',\n    styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n    pageContent = {\n        header: {\n            title: \"My Games List\",\n            body: \"This is a list of games\"\n        }\n    }\n}\n\n\n","<app-header [content]=\"pageContent.header\"></app-header>\n<app-game-list></app-game-list>\n","import { Component, OnInit, Injectable } from '@angular/core';\nimport {  GameDataService } from '../game-service.service';\nimport {Game} from '../game';\n\n\n@Component({\n  selector: 'app-indoor',\n  templateUrl: './indoor.component.html',\n  styleUrls: ['./indoor.component.css'],\n  providers:[GameDataService]\n})\nexport class IndoorComponent implements OnInit {\n\n  constructor(private gameDataService : GameDataService) { }\n  \n  games : Game[];\n  newGame : Game;\n\n  ngOnInit(): void {\n\n    this.gameDataService\n    .getGames()\n    .then((games : Game[])=>{\n           this.games = games.map(game=>{\n             if(game.type==\"indoors\")\n             {\n              console.log(\"check:\"+game.type);\n              game.type.fontcolor(\"orange\");\n             }\n             else{\n               console.log(\"check:\"+game.type);\n             }\n\n            //  coding logic for filtering gamees of type = indoors\n             \n             if (game.type==\"indoors\"){\n               game.type = game.name;\n               game.type = game.type.toUpperCase();\n             }\n\n             else\n             {\n              game.type = \"\"; // preventing display of non-indoor games\n             }\n\n             return game;\n\n           });\n    });\n\n  }\n\n}\n","<h1>List of the indoor games</h1><br>\n\n<div *ngFor=\"let arr of games\">\n    <a routerLink=\"/game/{{arr._id}}\">{{arr.type}}</a>\n</div>\n\n\n\n\n","import { Component, OnInit, Injectable } from '@angular/core';\nimport {  GameDataService } from '../game-service.service';\nimport {Game} from '../game';\n\n\n@Component({\n  selector: 'app-outdoor',\n  templateUrl: './outdoor.component.html',\n  styleUrls: ['./outdoor.component.css'],\n  providers:[GameDataService]\n})\nexport class OutdoorComponent implements OnInit {\n\n  constructor(private gameDataService : GameDataService) { }\n  \n  games : Game[];\n  newGame : Game;\n\n  ngOnInit(): void {\n\n    this.gameDataService\n    .getGames()\n    .then((games : Game[])=>{\n           this.games = games.map(game=>{\n             if(game.type==\"outdoors\")\n             {\n              console.log(\"check:\"+game.type);\n              game.type.fontcolor(\"orange\");\n             }\n             else{\n               console.log(\"check:\"+game.type);\n             }\n\n            //  coding logic for filtering gamees of type = outdoors\n             \n             if (game.type==\"outdoors\"){\n               game.type = game.name;\n               game.type = game.type.toUpperCase();\n             }\n\n             else\n             {\n              game.type = \"\"; // preventing display of non-outdoor games\n             }\n\n             return game;\n\n           });\n    });\n\n  }\n\n}\n","<h1>List of the outdoor games</h1><br>\n\n<div *ngFor=\"let arr of games\">\n    <a routerLink=\"/game/{{arr._id}}\">{{arr.type}}</a>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}